# TradeMaster Subscription Service - Clean Configuration
# Simplified configuration for local development and testing

server:
  port: 8085
  servlet:
    context-path: /api

spring:
  application:
    name: subscription-service

  # MANDATORY: Consul Config Import (per TradeMaster standards)
  config:
    import: "optional:consul:"

  # Allow bean definition overriding for conflicting configurations
  main:
    allow-bean-definition-overriding: true

  # MANDATORY: Virtual Threads Configuration per TradeMaster Standards
  threads:
    virtual:
      enabled: true

  # Database Configuration - disabled for API testing
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
      - org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration

  # MANDATORY: Consul Service Discovery & Configuration per Golden Specification
  cloud:
    # Disable Spring Cloud compatibility verifier for Spring Boot 3.5.3
    compatibility-verifier:
      enabled: false

    # Consul Integration
    consul:
      host: ${CONSUL_HOST:localhost}
      port: ${CONSUL_PORT:8500}
      discovery:
        enabled: true
        register: true
        health-check-path: /actuator/health
        health-check-interval: 30s
        health-check-timeout: 10s
        health-check-critical-timeout: 300s
        health-check-url: http://${CONSUL_INSTANCE_HOSTNAME:localhost}:${MANAGEMENT_SERVER_PORT:9085}/actuator/health
        instance-id: ${spring.application.name}:${server.port}:${random.uuid}
        hostname: ${CONSUL_INSTANCE_HOSTNAME:localhost}
        port: ${server.port}
        service-name: ${spring.application.name}
        tags:
          - subscription-capabilities=BILLING,TRIAL,UPGRADE,NOTIFICATIONS
          - api-version=v1
          - kong-upstream=subscription-service
          - internal-api=/api/internal/v1/subscription
          - external-api=/api/v1/subscription
        metadata:
          version: ${app.version:1.0.0}
          description: "TradeMaster Subscription Management Service"
          supported-features: "BILLING,TRIAL,UPGRADE,NOTIFICATIONS"
          performance-target: "subscription-processing-100ms"
      config:
        enabled: true
        prefix: config
        default-context: ${spring.application.name}
        profile-separator: ':'
        data-key: data
        format: YAML
        watch:
          enabled: true
          delay: 10000

    # Config refresh capabilities
    refresh:
      enabled: true
      rate: 30s

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 300000  # 5 minutes for session cache

  # Security Configuration (minimal for testing)
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080}
          jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8080/.well-known/jwks.json}

# MANDATORY: Enhanced Monitoring Configuration per TradeMaster Standards
management:
  server:
    port: ${MANAGEMENT_SERVER_PORT:9085}  # Separate port for management endpoints
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,threaddump,heapdump,configprops,refresh,beans,readiness,liveness
      base-path: /actuator
      path-mapping:
        health: health
        info: info
        readiness: ready
        liveness: alive
      cors:
        allowed-origins: "*"
        allowed-methods: GET,POST
  endpoint:
    health:
      enabled: true
      show-details: always
      show-components: always
      probes:
        enabled: true
      group:
        readiness:
          include: readinessState,redis
        liveness:
          include: livenessState,diskSpace,ping
    metrics:
      enabled: true
    prometheus:
      enabled: true
    refresh:
      enabled: true
    configprops:
      enabled: true
      show-values: always
  health:
    config:
      enabled: true
    refresh:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 30s
        descriptions: true
    distribution:
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
        subscription.processing.duration: 0.5, 0.95, 0.99
        notification.delivery.duration: 0.5, 0.95, 0.99
        billing.processing.duration: 0.5, 0.95, 0.99
      slo:
        http.server.requests: 50ms,100ms,200ms,500ms
        subscription.processing.duration: 100ms,500ms,1s,3s
        notification.delivery.duration: 100ms,500ms,1s,5s
        billing.processing.duration: 100ms,500ms,1s,2s
      percentiles-histogram:
        http.server.requests: true
        subscription.processing.duration: true
    tags:
      application: trademaster
      service: subscription-service
      environment: ${spring.profiles.active:local}
      version: ${info.app.version:1.0.0}
  tracing:
    sampling:
      probability: 1.0
    zipkin:
      endpoint: ${ZIPKIN_URL:http://localhost:9411/api/v2/spans}

# Logging Configuration
logging:
  level:
    com.trademaster.subscription: DEBUG
    org.springframework.security: INFO
    org.hibernate: INFO
    org.springframework.cloud.consul: DEBUG
    org.springframework.cloud.consul.discovery: DEBUG
    org.springframework.cloud.consul.serviceregistry: DEBUG
    com.ecwid.consul: DEBUG
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

# Application Configuration
app:
  version: "1.0.0"
  subscription:
    trial-period-days: 14
    grace-period-days: 7
    max-retry-attempts: 3
  notification:
    email:
      enabled: true
    sms:
      enabled: false
  audit:
    enabled: true
    retention-days: 365

# TradeMaster Configuration
trademaster:
  service:
    name: subscription-service
  security:
    service:
      enabled: true
      api-key: ${SUBSCRIPTION_SERVICE_API_KEY:subscription-service-api-key-dev}

---
# Docker Profile - Override Redis configuration for Docker environment
spring:
  config:
    activate:
      on-profile: docker
  data:
    redis:
      host: redis
      port: 6379