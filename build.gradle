plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.flywaydb.flyway' version '10.7.1'
}

group = 'com.trademaster'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

// MANDATORY: Java 24 Preview Features per TradeMaster Standards
tasks.named('compileJava') {
    options.compilerArgs += ['--enable-preview']
}

tasks.named('compileTestJava') {
    options.compilerArgs += ['--enable-preview']
}

tasks.named('test') {
    jvmArgs += ['--enable-preview']
    useJUnitPlatform()
    testLogging {
        events = ["passed", "skipped", "failed"]
        exceptionFormat = "full"
    }
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += ['--enable-preview']
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    
    // Database
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    
    // Kafka for Event Streaming
    implementation 'org.springframework.kafka:spring-kafka'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // HTTP Client for Service Integration
    implementation 'org.apache.httpcomponents.client5:httpclient5'
    
    // Validation
    implementation 'org.hibernate.validator:hibernate-validator'
    
    // Monitoring & Metrics - MANDATORY per Standards
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    
    // Structured Logging - MANDATORY per Standards
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    
    // OpenAPI Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.2.0'
    
    // Circuit Breaker & Resilience - MANDATORY per TradeMaster Standards
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-micrometer:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-all:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    
    // Service Discovery & Configuration - MANDATORY for TradeMaster Infrastructure
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // MapStruct for Mapping
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:kafka'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


// Boot run configuration
bootRun {
    jvmArgs = [
        "-Dspring.threads.virtual.enabled=true",
        "--enable-preview"
    ]
}

// Spring Boot configuration
springBoot {
    mainClass = 'com.trademaster.subscription.SubscriptionServiceApplication'
    buildInfo()
}

// Dependency Management for Spring Boot 3.5.3 compatibility
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.4"
        mavenBom "io.github.resilience4j:resilience4j-bom:2.2.0"
    }
}

ext {
    set('springCloudVersion', "2023.0.4")
}

// Flyway Configuration
flyway {
    url = 'jdbc:postgresql://localhost:5432/trademaster_subscription'
    user = 'trademaster_user'
    password = 'trademaster_password'
    schemas = ['public']
    locations = ['filesystem:src/main/resources/db/migration']
}